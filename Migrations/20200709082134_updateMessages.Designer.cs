// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QulificationToolForCreditCard.Models;

namespace QulificationToolForCreditCard.Migrations
{
    [DbContext(typeof(CreditCardContext))]
    [Migration("20200709082134_updateMessages")]
    partial class updateMessages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QulificationToolForCreditCard.Models.CardDetails", b =>
                {
                    b.Property<int>("CreditCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("APR");

                    b.Property<string>("CardName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Message");

                    b.Property<DateTime>("ModifiedDateTime");

                    b.HasKey("CreditCardId");

                    b.ToTable("CardDetails");

                    b.HasData(
                        new { CreditCardId = 1, APR = 0m, CardName = "None", CreatedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 758, DateTimeKind.Local), Message = "No credit cards are available for the customer below 18 Age.", ModifiedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 762, DateTimeKind.Local) },
                        new { CreditCardId = 2, APR = 24.6m, CardName = "Barclay", CreatedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 763, DateTimeKind.Local), Message = "Enjoy the Barclay credit card, Barclay credit card now offers an APR of 24.60 %", ModifiedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 763, DateTimeKind.Local) },
                        new { CreditCardId = 3, APR = 36.8m, CardName = "Vanquis", CreatedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 763, DateTimeKind.Local), Message = "Enjoy the Vanquis credit card, Vanquis credit card now offers an APR of 36.80 %", ModifiedDateTime = new DateTime(2020, 7, 9, 10, 21, 33, 763, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("QulificationToolForCreditCard.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AnnualIncome")
                        .HasColumnName("Annual_Income");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<int>("CreditCardId");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifiedDateTime");

                    b.HasKey("CustomerId");

                    b.HasIndex("CreditCardId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("QulificationToolForCreditCard.Models.Customer", b =>
                {
                    b.HasOne("QulificationToolForCreditCard.Models.CardDetails", "CardDetails")
                        .WithMany()
                        .HasForeignKey("CreditCardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
